.main__pages {
    display: flex;
    flex-direction: column;
}

.recipe-card {
    display:flex;
    flex-direction: column;
    justify-self: center;
    background-color: #f6f6f6;
}

.recipe-card section {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 0 0 10px 0;
}

.recipe-card article {
    display:flex;
    justify-content: center;
    width: 92.98%;
    height: 65px;
    border-radius: 15px;
    background-color: white;
    box-shadow: 2px 2px 10px #e7e7e7;
    overflow: hidden; /*pour rogner le square*/
    margin-bottom: 27px;
}

.recipe-card__meal-kind {
    align-self: start;
    font-size: 16px;
    width: 88%; /*parce que user agent le met en block alors que tu voudrais un inline*/
    font-weight: normal;
    /*text-decoration: solid underline #34a689;*/
    background-image: linear-gradient(#34a689, #34a689);
    background-position: bottom left; /*Adjust the background-position to move the line*/
    background-size: 10% 3px; /*Adjust the background size to control length and height*/
    background-repeat: no-repeat;
    padding-bottom: 6px; /* this can also control the position */
    margin-left: 20px;
}

.recipe-card__recipe {
    width: 100%;
    margin: 0;
    padding: 0 0px 0 9px;
    overflow: hidden; /*empêche le rognage à gauche pour le text-overflow ci dessous*/
}

.recipe-card__recipe h3 {
    margin: 0 0 2px 0;
    font-size: 18px;
    font-weight: 900;
    padding-top: 13px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis; /*ne va pas sans les 2 propriétés précédentes*/
}

.recipe-card__recipe--byline {
    display: flex;
    justify-content: space-between;
    font-size: 16px;
    margin: 0;
}

.recipe-card__recipe--price {
    font-weight: 900;
    font-size: 16px;
    white-space: nowrap;
    transform: translateX(47px);
    transition: transform 400ms ease-in-out;
    position: absolute;
    top: 0;/*important car avec ses 4 lignes reprends taille parent et comportement, il faut ensuite donner un width et height à l'élément --newest pour lui appliquer enfin un margin-left auto qui fonctionne!!!!*/
    left: 0; /*important car avec ses 4 lignes reprends taille parent et comportement, il faut ensuite donner un width et height à l'élément --newest pour lui appliquer enfin un margin-left auto qui fonctionne!!!!*/
    right: 0; /*important car avec ses 4 lignes reprends taille parent et comportement, il faut ensuite donner un width et height à l'élément --newest pour lui appliquer enfin un margin-left auto qui fonctionne!!!!*/
    bottom: 0; /*important car avec ses 4 lignes reprends taille parent et comportement, il faut ensuite donner un width et height à l'élément --newest pour lui appliquer enfin un margin-left auto qui fonctionne!!!!*/
    width: 25px;
    margin: 37px 69px 0 auto; /*47 du translate + 22 du margin right normal*/
}

.recipe-card__animate {
    /*opacity: 0;*/
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #99e2d0;
    margin-left: 32px;
    overflow: hidden; /*quand il sera invoqué pour lors du hover, il ne sortira pas du container*/
    transform: translateX(50px);
    transition: transform 400ms ease-in-out;
    transform-origin: right 50%;
}

.fa-check-circle {
    display: block;
    color: #fff;
    padding: 0 20px 0 18px;
    transform: rotate(-1turn);
    transition: transform 250ms ease-in-out;
    transition-delay: 150ms;
}

/*Ta bordure est contenue dans une balise, cette balise ne doit pas contenir de padding ni margin sur droite et gauche. Si tu as utilisé display flex, tu peux utiliser flex-basis
Par exemple en supposant que activité est hébergement sont dans une ul li li, tu donnes flex basis 100% à la ul , et flex-basis 50% à chaque li.
Flex-basis c’est un peu pour les box ce que le line-height est au texte*/

.recipe-card article:hover>.recipe-card__animate {
    transform: translateX(0);
}

.recipe-card article:hover .fa-check-circle {
    transform: rotate(0turn);
}

.recipe-card article:hover .recipe-card__recipe--price {
    transform: translateX(0);
}

/*---------------------------------------------------------------------------------*/
$easing: cubic-bezier (.49,.18,.23,1);
$width: 33vh;
$height: 72vh;
$margin-right: 4vh;
$wid-marg: $width + $margin-right;
.card {
    width: $width;
    height: $height;
    overflow: hidden;
    &:not(:last-child){
        margin-right: $margin-right;
    }
    &--anim {
        transform: translateX($width-marg);
        transition: transform 700ms $easing;
    }
    &__contents {
        width: $width;
        overflow: hidden;
    &--anim {
            transform: translateX($wid-marg*-1);
            transition: transform 700ms $easing;
        }
    }
}
.btn {
    &--reveal {
        &:hover {
            & + .card {
                &--anim {
                    transform: translateX(0);
                }
                .card__contents--anim {
                    transform: translateX(0);
                }
            }
        }
    }
}